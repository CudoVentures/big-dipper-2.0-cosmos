# Copyright 2020 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and Deploy to Google Compute Engine

on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  GAR_REPO_NAME: ${{ secrets.GAR_REPO_NAME }}

#   GCE_INSTANCE: my-githubactions-vm  # TODO: update to instance name
#   GCE_INSTANCE_ZONE: us-central1-a   # TODO: update to instance zone

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: public-testnet
    env:
      LOGGING_DRIVER:  ${{ secrets.LOGGING_DRIVER }}
      NEXT_PUBLIC_CHAIN_STATUS:  ${{ secrets.NEXT_PUBLIC_CHAIN_STATUS }}
      NEXT_PUBLIC_GRAPHQL_URL:  ${{ secrets.NEXT_PUBLIC_GRAPHQL_URL }}
      NEXT_PUBLIC_GRAPHQL_WS:  ${{ secrets.NEXT_PUBLIC_GRAPHQL_URL }}
      NEXT_PUBLIC_URL:  ${{ secrets.NEXT_PUBLIC_URL }}
      NEXT_PUBLIC_WS_CHAIN_URL:  ${{ secrets.NEXT_PUBLIC_WS_CHAIN_URL }}
      NODE_ENV:  ${{ secrets.NODE_ENV }}
      PORT:  ${{ secrets.PORT }}

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/673780150138/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
        service_account: 'github-actions-ci-cd-service@cudos-testnet.iam.gserviceaccount.com'

    # Alternative option - authentication via credentials json
    # - id: 'auth'
    #   uses: 'google-github-actions/auth@v0'
    #   with:
    #     credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker \
        us-central1-docker.pkg.dev

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
        -t "us-docker.pkg.dev/$PROJECT_ID/$GAR_REPO_NAME/explorer-v2-image:$GITHUB_SHA" \
        --build-arg LOGGING_DRIVER=$LOGGING_DRIVER \
        --build-arg NEXT_PUBLIC_CHAIN_STATUS=$NEXT_PUBLIC_CHAIN_STATUS \
        --build-arg NEXT_PUBLIC_GRAPHQL_URL=$NEXT_PUBLIC_GRAPHQL_URL \
        --build-arg NEXT_PUBLIC_GRAPHQL_WS=$NEXT_PUBLIC_GRAPHQL_WS \
        --build-arg NEXT_PUBLIC_URL=$NEXT_PUBLIC_URL \
        --build-arg NEXT_PUBLIC_WS_CHAIN_URL=$NEXT_PUBLIC_WS_CHAIN_URL \
        --build-arg NODE_ENV=$NODE_ENV \
        --build-arg PORT=$PORT \
        -f "Dockerfile-prod" .
        
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "us-central1-docker.pkg.dev/$PROJECT_ID/$GAR_REPO_NAME/explorer-v2-image:$GITHUB_SHA"

    - name: Deploy
      run: |-
        gcloud compute instances update-container "$GCE_INSTANCE" \
          --zone "$GCE_INSTANCE_ZONE" \
          --container-image "us-central1-docker.pkg.dev/$PROJECT_ID/$GAR_REPO_NAME/explorer-v2-image:$GITHUB_SHA"
          

